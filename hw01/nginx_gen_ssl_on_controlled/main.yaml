# Сценарий работает только для управляемых серверов с python3
# т.к. модуль cryptography требует этого
# Centos 7 не заработал
# Поэтому использовался Centos 9 stream minimal
# ansible-galaxy collection install community.crypto
---
- name: configure webserver with tls
  hosts: nodes3
  gather_facts: true

  become: true
  vars:
    nginx_port_no_tls: 80
    nginx_port_tls: 443
    ssl_path: "/etc/nginx/ssl"
  tasks:
    - name: Install pip
      dnf:
        name: pip

    - name: install cryptography.py
      pip:
        name:
          - cryptography

    - name: Create a ssl-directory if it does not exist
      ansible.builtin.file:
        path: "{{ ssl_path }}"
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{ ssl_path }}/{{ ansible_host }}.key"

    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{ ssl_path }}/{{ ansible_host }}.csr"
        privatekey_path: "{{ ssl_path }}/{{ ansible_host }}.key"
        common_name: "{{ansible_host}}"

    - name: Generate a Self Signed OpenSSL certificate
      community.crypto.x509_certificate:
        path: "{{ ssl_path }}/{{ ansible_host }}.crt"
        privatekey_path: "{{ ssl_path }}/{{ ansible_host }}.key"
        csr_path: "{{ ssl_path }}/{{ ansible_host }}.csr"
        provider: selfsigned

    - name: install nginx
      dnf:
        name: nginx
        state: present

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/tls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: insert firewalld rule for nginx-http
      firewalld:
        port: "{{ nginx_port_no_tls }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true

    - name: insert firewalld rule for nginx-https
      firewalld:
        port: "{{ nginx_port_tls }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true

  post_tasks:
    - name: check web site from control server
      uri:
        url: "http://{{ ansible_host }}:{{ nginx_port_no_tls }}"
        return_content: true
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
